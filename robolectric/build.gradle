evaluationDependsOn(':project')
apply plugin: 'java'
apply plugin: 'checkstyle'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    def androidModule = project(':project')
    compile androidModule

    testCompile 'junit:junit:4.11'

    def roboVersion = '3.0-rc2'
    testCompile("org.robolectric:robolectric:$roboVersion") {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'sqlite-jdbc'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.google.android', module: 'support-v4'
    }
    testCompile("org.robolectric:shadows-multidex:$roboVersion")

    // add all of the jars and output from our 'app under test' variant to the test classpath
    def compileTask = null
    def bootClasspath = androidModule.android.getBootClasspath()
    androidModule.android.applicationVariants.all() { variant ->
        if (variant.applicationId == "com.expedia.bookings.debug") {
            compileTask = variant.javaCompile
        }
    }
    if (compileTask != null) {
        testCompile compileTask.classpath
        testCompile compileTask.outputs.files

        // Add all of the android gradle plugin bootclasspath items to our test compile classpath
        testCompile files(bootClasspath)
    }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/robolectric/**Test.class"

    // Java 7/8 verifies more strictly and the google play services libraries fail because they are proguarded
    jvmArgs('-noverify')
}

checkstyle {
    toolVersion = '6.2'
    ignoreFailures = false
    configFile = rootProject.file('project/checkstyle.xml')
}
