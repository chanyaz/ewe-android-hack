apply plugin: 'com.android.library'

version = '1.2.1'

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

dependencies {
    compile "com.google.android.gms:play-services-maps:${rootProject.ext.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-gcm:${rootProject.ext.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-ads:${rootProject.ext.googlePlayServicesVersion}"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

// See https://groups.google.com/forum/#!topic/adt-dev/kzbEHAGbFVg
afterEvaluate {
    apply plugin: 'maven-publish'

    publishing {
        publications {
            lib(MavenPublication) {
                groupId 'com.mobiata'
                artifactId 'android-utils'
                version project.version

                artifact(sourceJar)
                artifact(project.tasks.bundleRelease.archivePath)

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.compile.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }

        repositories {
            maven {
                def path = project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'
                url "${project.hasProperty("REPOSITORY_PATH") ? REPOSITORY_PATH : "$buildDir/repo"}/${path}"
            }
        }
    }
}
