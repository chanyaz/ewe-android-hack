def shouldRunProguard = GradleUtil.shouldEnableProguard(project)

apply plugin: 'android'
apply plugin: AndroidExpediaPlugin

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':lib:ActionBarSherlock:actionbarsherlock')
    compile project(':lib:FacebookSdk:facebook')
    compile project(':lib:FlightLib')
    compile project(':lib:google-play-services')
    compile project(':lib:svg-android:svgandroid')
    compile project(':lib:Utils')
    compile project(':lib:ShareEverywhere:shareeverywhere')

    instrumentTestCompile fileTree('../tests/libs').include('*.jar')
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.0.1"

    defaultConfig {
        versionCode 32
        versionName "3.5"
        minSdkVersion 8
        targetSdkVersion 18

        testPackageName "com.expedia.bookings.debug.test"
        testInstrumentationRunner "com.zutubi.android.junitreport.JUnitReportTestRunner"
    }

    productFlavors {
        Expedia {
            packageName "com.expedia.bookings"
            buildConfig "public static final boolean IS_VSC = false;"
        }

        VSC {
            buildConfig "public static final boolean IS_VSC = true;"
            packageName "com.expedia.bookings.vsc"
            versionCode 1
            versionName "1.0"
        }
    }

    // Add the HockeyMeta extension to all build types
    buildTypes.all { buildType ->
        buildType.extensions.create("hockey", HockeyExtension)
    }

    buildTypes {
        debug {
            packageNameSuffix ".debug"

            runProguard shouldRunProguard
            proguardFile 'proguard.cfg'
        }

        latest.initWith(buildTypes.debug)
        latest {
            packageNameSuffix ".latest"
            hockey.enabled true
        }

        next.initWith(buildTypes.debug)
        next {
            packageNameSuffix ".next"
            hockey.enabled true
        }

        tablet.initWith(buildTypes.debug)
        tablet {
            packageNameSuffix ".tablet"
            hockey.enabled true
        }

        release {
            runProguard true
            proguardFile 'proguard.cfg'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.manifest.srcFile '../tests/AndroidManifest.xml'
        instrumentTest.java.srcDirs = ['../tests/src']

        VSC {
            manifest.srcFile 'AndroidManifest-vsc.xml'
            res.srcDirs 'res_vsc'
        }

        signingConfigs {
            debug {
                storeFile file("../common/debug.keystore")
            }
        }
    }

}
