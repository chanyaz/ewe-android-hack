def shouldRunProguard = GradleUtil.shouldEnableProguard(project)
def featureName = GradleUtil.getFeatureName(project)
def gitRev = GradleUtil.getGitRevision()

apply plugin: 'android'
apply plugin: 'crashlytics'
apply plugin: AndroidExpediaPlugin
apply plugin: 'checkstyle'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
    compile fileTree(dir: 'libs', include: [
            'activeandroid-20131111.jar',
            'admsAppLibrary-3.0.5.jar',
            'adxtag3.2.jar',
    ])
    compile project(':lib:FacebookSdk:facebook')
    compile project(':lib:FlightLib')
    compile project(':lib:svg-android:svgandroid')
    compile project(':lib:Utils')
    compile project(':lib:ShareEverywhere:shareeverywhere')
    compile project(':lib:AndroidTime')

    compile "com.android.support:support-v4:${rootProject.ext.supportLibVersion}"
    compile "com.google.android.gms:play-services:${rootProject.ext.googlePlayServicesVersion}"

    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup:otto:1.3.4'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.crashlytics.android:crashlytics:1.+'

    androidTestCompile 'com.jakewharton.espresso:espresso:1.1-r3'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.1'
    androidTestCompile('com.squareup.okhttp:mockwebserver:2.0.0') {
        exclude group: 'com.squareup.okhttp'
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    defaultConfig {
        versionCode 36
        versionName "4.0"
        minSdkVersion 15
        targetSdkVersion 19

        testApplicationId "com.expedia.bookings.test"
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"

        buildConfigField "boolean", "IS_EXPEDIA", "false"
        buildConfigField "boolean", "IS_VSC", "false"
        buildConfigField "boolean", "IS_TRAVELOCITY", "false"
        buildConfigField "boolean", "IS_AAG", "false"
        buildConfigField "boolean", "IS_AUTOMATION", "false"

        buildConfigField "String", "MEDIA_URL", "\"http://media.expedia.com\""
        buildConfigField "String", "GIT_REVISION",  "\"${gitRev}\""

        manifestPlaceholders = [ crashlyticsKey:"045825b17e2b00aa0dde8ba0dcea1ad63801d612"]
    }

    productFlavors {
        Expedia {
            buildConfigField "boolean", "IS_EXPEDIA", "true"
            buildConfigField "String", "MEDIA_URL", "\"http://media.expedia.com\""
            applicationId "com.expedia.bookings"
        }

        VSC {
            buildConfigField "boolean", "IS_VSC", "true"
            buildConfigField "String", "MEDIA_URL", "\"http://media.expedia.com\""
            applicationId "com.expedia.bookings.vsc"
            versionCode 1
            versionName "1.0"
        }

        Travelocity {
            buildConfigField "boolean", "IS_TRAVELOCITY", "true"
            buildConfigField "String", "MEDIA_URL", "\"http://media.travelocitycustomercare.com\""
            applicationId "com.travelocity.android"
            versionCode 1003
            versionName "6.2-${versionCode}"
        }

        AirAsiaGo {
            buildConfigField "boolean", "IS_AAG", "true"
            buildConfigField "String", "MEDIA_URL", "\"http://media.expedia.com\""
            applicationId "com.airasiago.android"
            versionCode 1
            versionName "1.0"
        }

        ExpediaAutomation {
            buildConfigField "boolean", "IS_EXPEDIA", "true"
            buildConfigField "boolean", "IS_AUTOMATION", "true"
            buildConfigField "String", "MEDIA_URL", "\"http://0.0.0.0\""
            applicationId "com.expedia.bookings.auto"
            testInstrumentationRunner "com.expedia.bookings.test.utils.SpoonInstrumentationTestRunner"
        }

        TravelocityAutomation {
            buildConfigField "boolean", "IS_TRAVELOCITY", "true"
            buildConfigField "boolean", "IS_AUTOMATION", "true"
            applicationId "com.travelocity.android.auto"
            versionCode 1
            versionName "1.0"
        }
    }

    // Add the HockeyMeta extension to all build types
    buildTypes.all { buildType ->
        buildType.extensions.create("hockey", HockeyExtension)
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"

            runProguard shouldRunProguard
            proguardFile 'proguard.cfg'
        }

        latest.initWith(buildTypes.debug)
        latest {
            applicationIdSuffix ".latest"
            hockey.enabled true

            ext.betaDistributionReleaseNotesFilePath="../changelog.txt"
            ext.betaDistributionGroupAliasesFilePath="../buildbot/crashlytics_beta_groups.txt"
        }

        feature.initWith(buildTypes.debug)
        feature {
            applicationIdSuffix (".feature." + featureName)
            hockey.enabled true

            ext.betaDistributionReleaseNotesFilePath="../changelog.txt"
            ext.betaDistributionGroupAliasesFilePath="../buildbot/crashlytics_beta_groups.txt"
        }

        release {
            runProguard true
            proguardFile 'proguard.cfg'
        }
    }

    sourceSets {

        debug {
            manifest.srcFile 'AndroidManifest-debug.xml'
        }

        androidTest {
            java.srcDirs = ['unitTests/java']
            res.srcDirs = ['unitTests/res']
            assets.srcDirs = ['unitTests/assets']
        }

        androidTestExpediaAutomation {
            manifest.srcFile 'tests/AndroidManifest.xml'
            java.srcDirs = ['tests/src']
            res.srcDirs = ['tests/res']
        }

        androidTestTravelocityAutomation {
            manifest.srcFile 'tests/AndroidManifest-travelocity.xml'
            java.srcDirs = ['tests/src']
            res.srcDirs = ['tests/res_travelocity']
        }

        Expedia {
            manifest.srcFile 'AndroidManifest-expedia.xml'
        }

        VSC {
            manifest.srcFile 'AndroidManifest-vsc.xml'
            res.srcDirs 'res_vsc'
        }

        Travelocity {
            manifest.srcFile 'AndroidManifest-travelocity.xml'
            res.srcDirs 'res_travelocity'
        }

        AirAsiaGo {
            manifest.srcFile 'AndroidManifest-aag.xml'
            res.srcDirs 'res_airasiago'
        }

        ExpediaAutomation {
            manifest.srcFile 'AndroidManifest-expedia.xml'
        }

        TravelocityAutomation {
            manifest.srcFile 'AndroidManifest-travelocity.xml'
            res.srcDirs 'res_travelocity'
        }

        signingConfigs {
            debug {
                storeFile file("../common/debug.keystore")
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    checkstyle {
        toolVersion = '5.7'
    }

    task checkstyle(type: Checkstyle) {
        configFile file('../common/checkstyle.xml')
        source 'src/'
        include '**/*.java'

        // These files are from outside our project
        exclude (
            '**/AdapterView.java',
            '**/gl/*.java',
            '**/Gallery.java',
            '**/AbsSpinner.java',
            '**/GLTagProgressBar.java',
            '**/CustomEditText.java',
            '**/SocketActivityHierarchyServer.java',
        )

        classpath = files()
        ignoreFailures = true
    }
}
