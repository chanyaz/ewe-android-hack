def isServerBuild
def jenkinsBuildNumber = "$System.env.BUILD_NUMBER"
if (!jenkinsBuildNumber.isEmpty() && jenkinsBuildNumber != "null") {
    isServerBuild = true
} else {
    isServerBuild = false
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.+'
    }
}
apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':lib:ActionBarSherlock:actionbarsherlock')
    compile project(':lib:FacebookSdk:facebook')
    compile project(':lib:FlightLib')
    compile project(':lib:google-play-services')
    compile project(':lib:OpinionLab')
    compile project(':lib:svg-android:svgandroid')
    compile project(':lib:Utils')
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        versionCode 24
        versionName "3.3"
        minSdkVersion 8
        targetSdkVersion 17
    }

    productFlavors {
        EBad {
            buildConfig "public static final boolean IS_VSC = false;"
        }

        VSC {
            buildConfig "public static final boolean IS_VSC = true;"
            packageName "com.expedia.bookings.vsc"
            versionCode 1
            versionName "1.0"
        }
    }

    buildTypes {
        alpha.initWith(buildTypes.debug)
        alpha {
            packageNameSuffix ".alpha"

            runProguard true
            proguardFile 'proguard.cfg'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')

        release {
            res.srcDirs 'res_release'
        }

        alpha {
            res.srcDirs 'res_alpha'
        }

        VSC {
            res.srcDirs 'res_vsc'
        }

        signingConfigs {
            debug {
                storeFile file("../common/debug.keystore")
            }
        }
    }

}


// Set the HockeyApp buildNumber meta-data as the Jenkins BUILD_NUMBER for all alpha builds
android.applicationVariants.each { variant ->
    if (variant.buildType.name == 'alpha') {
        variant.processManifest.dependsOn {
            if (isServerBuild) {
                def hockeyFile = file("res_alpha/values/hockey_integers.xml")
                def fileContents = """\
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <integer name="hockey_app_build_number">${jenkinsBuildNumber}</integer>
</resources>
"""
                hockeyFile.write(fileContents)
            }
        }
    }
}
