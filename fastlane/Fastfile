# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.111.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Run a marketing screenshot sweep"
  lane :screenshots do
    # Build
    gradle(task: "assembleExpediaDebug assembleExpediaDebugAndroidTest", flags: "-PSCREENSHOT_BUILD")

    # Prepare device
    adb(command: "install -r project/build/outputs/apk/project-expedia-debug.apk")
    adb(command: "shell settings put secure location_providers_allowed -network")
    adb(command: "shell settings put secure location_providers_allowed -gps")
    adb(command: "shell pm grant com.expedia.bookings.debug android.permission.ACCESS_COARSE_LOCATION")
    adb(command: "shell pm grant com.expedia.bookings.debug android.permission.ACCESS_FINE_LOCATION")
    adb(command: "shell pm grant com.expedia.bookings.debug android.permission.DUMP")

    # Run screenshots
    screengrab

    # Reset device
    demo_mode(enable: false)
  end

  desc "Create a new release branch and bump the version on the base branch"
  lane :branch_and_bump do |options|
    base_branch = options.fetch(:base, "develop")
    release_branch = "r/#{options[:flavor]}-#{options[:version]}"
    pr_branch = "i/version-bump-#{options[:flavor]}-#{options[:version]}"

    # Check out latest code on base branch
    ensure_git_status_clean
    ensure_git_branch(branch: base_branch)
    sh "git pull --rebase origin #{base_branch}"
    ensure_git_status_clean

    # Create and push branch
    sh "git checkout -b " + release_branch
    push_to_git_remote(local_branch: release_branch)

    # Create branch for version bump
    sh "git checkout #{base_branch}"
    sh "git checkout -b #{pr_branch}"

    # Bump version
    sh "cd .. && perl tools/change_version.pl project/build.gradle #{options[:flavor]} #{options[:version]}"

    # Create pull request
    git_commit(path: "project/build.gradle", message: "version bump")
    push_to_git_remote(local_branch: pr_branch)
    create_pull_request(api_token: ENV["GITHUB_TOKEN"], repo: "ExpediaInc/ewe-android-eb", title: "version bump #{options[:version]}", base: base_branch)

    sh "git checkout #{base_branch}"
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer
